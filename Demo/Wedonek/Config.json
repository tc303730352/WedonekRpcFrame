{
  "rpc": {
    "RpcServer": [ "172.17.0.2" ], //链接的终节点地址
    "RpcIndex": 0, //在同物理机上时当前节点的编号
    "RpcAppId": "9cc83d72ba2a4b9f94493325c3acf4ee", //集群AppId
    "RpcAppSecret": "a375982219934630aabb646e41e0ef14", //集群链接密钥
    "RpcSystemType": "demo.gateway", //所属系统类别
    "LocalMac": "7c:b2:7d:ea:fd:df", //本地MAC地址
    "IsEnableError": true, //是否启用错误管理模块
    "Log": {
      "IsUpLog": true, //是否上传日志
      "LogGradeLimit": 3 //上传日志等级限制
    },
    "RpcLog": { //系统内日志类别配置 Dictionary<> Key为事件名称
      "ConfigRefresh": { //配置刷新事件
        "LogGroup": "Rpc_Config", //所属日志组
        "LogGrade": 2 // 日志级别
      }
    },
    "Config": {
      "TranOverTime": 60, //远程事务超时时间 单位：秒
      "CloseDelayTime": 10, //关闭服务延迟时间 单位：秒 
      "ExpireTime": 10, //RPC消息过期时间(秒)
      "LockTimeOut": 3, //同步锁本地超时时间(秒)
      "LockOverTime": 2, //远程锁过期时间(秒)
      "MaxRetryNum": 3, //数据发送失败最大重试数
      "IsValidateData": false, //发送数据前是否验证数据格式
      "IsEnableQueue": true, //是否启用消息队列
      "CacheType": 2, //缓存组件使用的缓存类型 默认：redis ( 0 =Memcached 1=redis 2=local)
      "ContainerType": 0, //当前节点服务所属容器类型 0=无，1=docker 2=k8s
      "DefPort": 0 //当前节点服务在容器中分配的端口号 
    },
    "Idgenerator": { //雪花ID标识生成服务 使用第三方：Yitter.IdGenerator
      "WorkerIdBitLength": 6,
      "SeqBitLength": 6, //序列数位长，默认值6 取值范围 [3, 21]（建议不小于4）
      "MinSeqNumber": 5, //最小序列数，默认值5 取值范围 [5, MaxSeqNumber]
      "MaxSeqNumber": 0, // 最大序列数 设置范围 [MinSeqNumber, 2^SeqBitLength-1]，默认值0
      "BaseTime": "2020/2/20 2:20:02", //基础时间（也称：基点时间、原点时间、纪元时间），有默认值（2020年），是毫秒时间戳（是整数，.NET是DatetTime类型）
      "TimestampType": 0, //时间戳类型（0-毫秒，1-秒），默认0。
      "EnableDataCenter": true, //启用数据中心
      "DataCenterIdBitLength": 4 //数据中心的ID最大位数
    }
  },
  "rpcassembly": {
    "Track": { //链路日志
      "IsEnable": true, //是否启用链路
      "Trace128Bits": true, //生成128位的ID
      "ServiceName": "网关Demo", //链接记录的 服务名 默认服务节点名称
      "TraceType": 0, //链路跟踪  0=Local 1=Zipkin
      "TrackDepth": 0, //链路深度  基本 = 0,  发起的参数 = 2, 响应的数据 = 4, 接收的数据 = 8,   返回的数据 = 16 全部=30
      "TrackRange": 14, //链路跟踪范围   ALL = 14,  Gateway = 2, RpcMsg = 4, RpcQueue = 8
      "SamplingRate": 1000, // 抽样率 1000/1000000
      "ZipkinTack": {
        "PostUri": "http://127.0.0.1:9411/api/v1/spans" //Zipkin 数据提交地址
      },
      "Local": { //链路本地配置(默认为空 使用已下处理)
        "Dictate": "SysTrace", //接收链路日志指令名称
        "SystemType": "sys.sync" //接收链路日志的服务节点
      }
    },
    "Visit": { //服务节点访问统计服务
      "IsEnable": false, //是否启用
      "Interval": 10 //上报间隔时间（秒）
    },
    "Accredit": { //用户登陆授权服务
      "HeartbeatTime": 600, //心跳时间 在心跳时间内 本地授权信息存在访问量 则和"授权服务"中的数据进行更新(秒)
      "ErrorVaildTime": 10, //本地授权失效 留存时间 单位:秒
      "MinCheckTime": 5, //授权信息最短与中心节点同步状态时间 单位:秒
      "MaxCheckime": 60, //授权信息最长与中心节点同步状态时间 单位:秒
      "MinCacheTime": 180, //授权信息缓存本地最短时间 单位:秒 
      "MaxCacheTime": 300, //授权信息缓存本地最长时间 单位:秒 
      "RoleType": "demo" //当前服务节点角色类型 默认：服务节点组名
    },
    "Resource": { //内部资源服务
      "UpRange": 6 //资源上报范围 2=API接口 4=RPC接口 6=全部
    },
    "Identity": { //来源身份标识(多租户)
      "IsEnable": false, //是否启用
      "DefAppId": "" //默认应用标识ID
    }
  },
  "Log": {
    "LogGrade": 1, //框架记录日志最低级别    Trace=0, Information=2,DEBUG=1,WARN=2,ERROR=4,Critical=5
    "IsConsole": true, //是否写入控制台
    "IsWriteFile": true //是否写入本地文件
  },
  "cache": { //缓存配置
    "Memcached": {
      "MinPoolSize": 2, //最小链接数
      "MaxPoolSize": 100, //最大连接数
      "ServerIp": [ "172.29.112.1" ], //链接地址
      "UserName": null, //用户名
      "Pwd": null //密码
    },
    "Redis": {
      "DefaultDatabase": 0, //默认DB
      "AllowAdmin": true, //是否应允许管理操作
      "KeepAlive": 60, //Ping间隔 单位:秒
      "ConnectRetry": 3, //链接重试次数
      "SyncTimeout": 5000, //同步超时
      "AsyncTimeout": 5000, //异步超时
      "ConnectTimeout": 5000, //链接超时
      "ResponseTimeout": 5000, //响应超时
      "ServerIp": [ "127.0.0.1:6379" ], //链接节点地址
      "UserName": null, //用户名
      "Pwd": null, //密码
      "HighPrioritySocketThreads": true, // SocketManager读写器线程使用ThreadPriority.AboveNormal
      "CheckCertificateRevocation": false, //是否检查证书吊销列表
      "ServiceName": null //用于通过sentinel解析服务的服务名称
    }
  },
  "queue": {
    "QueueType": 0, //消息队列类型 0=RabbitMQ 1=Kafka
    "Rabbitmq": {
      "ClientProvidedName": null, //用于连接的默认客户端提供的名称
      "UserName": "guest", //用户名
      "Pwd": "guest", //密码
      "VirtualHost": "/", //虚拟地址
      "IsLasting": false, //消息是否持久化
      "IsAutoAck": true, //普通消息自动消费
      "SubIsAutoAck": true, //订阅消息是否自动消费
      "Servers": [
        {
          "ServerUri": null, //链接uri地址
          "ServerIp": "127.0.0.1" //链接IP地址
        }
      ]
    },
    "Kafka": {
      "Servers": [
        {
          "ServerUri": null, //链接uri地址
          "ServerIp": "127.0.0.1" //链接IP地址
        }
      ],
      "Public": { //发布者配置 Confluent.Kafka 组件配置参数一致
      },
      "Consumer": { //消费者配置 Confluent.Kafka 组件配置参数一致
      }
    }
  },
  "socket": { //TCP配置
    "Client": { //客户端信息
      "SyncTimeOut": 12000, //发送到返回的同步超时时间 单位：毫秒
      "port": 0, //默认端口号（单独使用Socket组件是生效）
      "ServerKey": "", //服务节点链接密钥，
      "ServerIp": "127.0.0.1", //默认服务端IP（单独使用Socket组件是生效）
      "CompressionSize": 10240, //数据压缩的最小字节大小(超过该字节自动压缩)
      "SpinWait": 50, //消息同步锁休眠时间 单位：毫秒 -1 关闭休眠。升级过程：休眠>加锁
      "TimeOut": 10, // 发送超时时间 单位：秒 默认：10秒
      "ConTimeout": 5, //链接超时时间 单位：秒 默认：5秒
      "Heartbeat": 60000, //心跳时间(毫秒) 默认：60-110秒之间
      "ClientNum": 2, //连接池最小链接数
      "UpFileMD5LimitSize": 5242880, //上传文件完整计算MD5大小限制默认：5MB
      "UpFileSendTimeOut": 10 //文件上传发送超时时间(单位：秒) 默认：10秒
    },
    "Service": { //服务端配置
      "SyncTimeOut": 12000, //发送到返回的同步超时时间 单位：毫秒
      "CompressionSize": 10240, //数据压缩的最小字节大小(超过该字节自动压缩)
      "Port": 0, //默认端口号
      "SpinWait": 50, //消息同步锁休眠时间 单位：毫秒 -1 关闭休眠。升级过程：休眠>加锁
      "ServerKey": "", //服务节点链接密钥，
      "Heartbeat": 60000, //心跳时间(毫秒) 默认：60-110秒之间
      "TimeOut": 10, // 发送超时时间 单位：秒 默认：10秒
      "UpConfig": //上传配置
      {
        "BlockSize": 5242880, //上传大文件分块大小 默认：5MB
        "UpTimeOut": 30 //上传超时时间(设定时间内无流量认为超时)，单位：秒
      }
    }
  },
  "pipe": { //管道配置
    "Client": { //客户端信息
      "SyncTimeOut": 12000, //发送到返回的同步超时时间 单位：毫秒
      "ServerName": ".", //默认链接的服务名称
      "PipeName": "", //默认链接的隧道名称
      "SpinWait": 50, //消息同步锁休眠时间 单位：毫秒 -1 关闭休眠。升级过程：休眠>加锁
      "ServerKey": "", //服务节点链接密钥，
      "Heartbeat": 60000, //心跳时间(毫秒) 默认：60-110秒之间
      "TimeOut": 10, // 发送超时时间 单位：秒 默认：10秒
      "ConTimeout": 5, //链接超时时间 单位：秒 默认：5秒
      "ClientNum": 2, //连接池最小链接数
      "UpFileMD5LimitSize": 5242880, //上传文件完整计算MD5大小限制默认：5MB
      "UpFileSendTimeOut": 10 //文件上传发送超时时间(单位：秒) 默认：10秒
    },
    "Service": { //服务端配置
      "SyncTimeOut": 12000, //发送到返回的同步超时时间 单位：毫秒
      "PipeName": "", //隧道名称
      "SpinWait": 50, //消息同步锁休眠时间 单位：毫秒 -1 关闭休眠。升级过程：休眠>加锁
      "ServerKey": "", //服务节点链接密钥，
      "Heartbeat": 60000, //心跳时间(毫秒) 默认：60-110秒之间
      "TimeOut": 10, // 发送超时时间 单位：秒 默认：10秒
      "UpConfig": //上传配置
      {
        "BlockSize": 5242880, //上传大文件分块大小 默认：5MB
        "UpTimeOut": 30 //上传超时时间(设定时间内无流量认为超时)，单位：秒
      }
    }
  },
  "iobuffer": { //通讯字节缓冲区 - 根据数据大小分配 对应的字节缓冲区（ 用于byte字节数组重用）
    "Expansion": 100, //扩展缓冲区的 初始容量
    "Init": { //缓冲区初始化配置
      "256": 50, // 初始化50个  256字节长度的字节数组 =byte[256];
      "512": 40, // 初始化40个  512字节长度的字节数组 =byte[512];
      "1024": 30,
      "1536": 30
    },
    "Scale": 25, //每次扩展缓冲区的比例值
    "Max": 1048576 //缓冲区最大缓冲字节数 默认：1MB 超过1MB的数据不使用缓冲区
  },
  "gateway": {
    "TracePwd": "wedonek", //强制链路密码 请求头 中添加 IsTrace:true 和 TracePwd:"wedonek" 强制记录这次请求的链路日志
    "http": {
      "Url": "http://127.0.0.1:86/", //HTTP监听地址
      "ApiRouteFormat": "/api/{controller}/{name}", //生成API访问路径格式
      "MaxRequstLength": 0, //最大请求长度 默认：0
      "UpConfig": { //上传配置
        "SingleFileSize": 10485760, //单文件最大大小
        "FileExtension": [ ".jpg", ".png" ], //允许的上传格式
        "LimitFileNum": 1, //每次上传的文件数量
        "EnableBlock": true, //启用分包上传
        "MaxCheckBlock": 20, //续传时临时文件最大校验的快(检查文件) 0=关闭校验 -1=无限制校验全文件
        "BlockUpUri": "/api/file/block/up", //分块上传URI地址
        "BlockUpUriIsRegex": false, //分块上传URI地址是否是正则表达式
        "BlockUpOverTime": 30, //分块上传超时时间(秒)
        "BlockUpSize": 10485760, //分块上传 块大小 默认10MB
        "SyncBlockLimit": 1073741824 //同步分块上传校验 大小(默认1G) 文件超过1G采取异步分块
      }
    },
    "socket": { //WebSocket 通用配置
      "RequestEncoding": "utf-8", //请求编码
      "ApiRouteFormat": "/api/{controller}/{name}" //生成API访问路径格式
    },
    "wholeLimit": { //请求的API全局限流器
      "LimitType": 0, //限流方式 0= 不启用 1=固定时间窗 2=流动时间窗 3=令牌桶
      "FixedTime": { //固定时间窗配置
        "Interval": 1, //窗口大小(秒)
        "LimitNum": 100 //限定数量
      },
      "FlowTime": { //活动时间窗配置
        "Interval": 1, //窗口大小(秒)
        "LimitNum": 100 //限定数量
      },
      "Token": { //令牌桶配置
        "TokenNum": 1000, //令牌总数
        "TokenInNum": 10 //令牌每秒新增数
      }
    },
    "ipBack": { //IP黑名单插件
      "IsEnable": false, //是否启用插件，
      "IsLocal": true, //是否使用本地黑名单
      "Local": {
        "DirPath": "Black", //名单保存的目录地址 程序会自动扫描该目录下的(不扫描子集目录) " .black "文件
        "SyncTime": 120 //文件夹同步时间 单位：秒 默认：120
      },
      "Remote": { //远端 IP黑名单配置
        "EnableCache": true, //是否启用本地缓存
        "CachePath": "BlackCache", //缓存文件存放的目录
        "SyncVerTime": 120 // 与黑名单服务节点同步数据的间隔(秒)
      }
    },
    "ipLimit": { //IP限流插件配置
      "IsEnable": true, //是否启用
      "IsLocal": true, //是否本地限流
      "LimitTime": 2, //时间窗大小(秒)
      "LimitNum": 100 //限制的请求数
    },
    "nodeLimit": { //请求接口限流器配置
      "LimitType": 0, //限流方式 0= 不启用 1=固定时间窗 2=流动时间窗 3=令牌桶
      "LimitRange": 0, //限定范围 0=全局 1=配置
      "Excludes": [ "" ], //排除的接口地址 (限定范围全局生效)
      "Limits": [ "" ], //限流的接口地址 （范围为 配置 和特性时生效）
      "FixedTime": { //固定时间窗配置
        "Interval": 1, //窗口大小(秒)
        "LimitNum": 100 //限定数量
      },
      "FlowTime": { //活动时间窗配置
        "Interval": 1, //窗口大小(秒)
        "LimitNum": 100 //限定数量
      },
      "Token": { //令牌桶配置
        "TokenNum": 1000, //令牌总数
        "TokenInNum": 10 //令牌每秒新增数
      }
    },
    "shieId": { //接口屏蔽插件配置
      "IsEnable": false, //是否启用,
      "IsLocal": false, //是否本地屏蔽
      "ShieIdPath": [ "" ] //屏蔽路径
    },
    "cross": { //跨域配置
      "AllowCredentials": true, //是否允许跨域
      "AllowUrlReferrer": [ ".wedonek.com" ], //跨域限定允许访问来源
      "AllowHead": "*", //跨域限定头部
      "MaxAge": "3600", //有效时间
      "Method": "POST,GET,OPTIONS" //允许的请求方式 ,号分隔
    },
    "idempotent": { //请求幂等插件 
      "Type": 0, //处理方式   不启用=0,申请Token=1, 请求中带上唯一Key=2
      "IsEnableRoute": true, //选择申请Token方式时 是否自动注册申请请求Token的路由
      "Route": { //请求Token的路由地址配置
        "IsAccredit": true, //是否进行登陆验证,
        "RoutePath": "/api/idempotent/token",
        "IsRegex": false, //请求地址是否为正则表达式
        "Prower": "" //请求所需权限
      },
      "Expire": 30, //Token过期时间
      "SaveType": 0, //Token 和申请的Key存储方式   Local=0, Redis=1，Memcached=2，跟随节点默认缓存方式=3
      "ArgName": "tokenId", //携带token或Key的参数名称
      "Method": 0, //携带token或Key的方式
      "Routes": [ "" ] //必须携带token或key的接口路由地址
    },
    "WebSocketDemo": { //属性名 对应模块名字   内容为 该模块的WebSocket配置
      "IsSingle": false, //是否启用单点链接
      "HeartbeatTime": 10, //客户端心跳时间 单位：秒
      "ServerPort": 1254, //服务端口号
      "BufferSize": 5242880, //发送数据流的缓冲区大小 默认：5MB
      "TcpBacklog": 5000, //监听队列长度
      "Certificate": { //SSL 配置
        "FileName": "", //SSL 文件名
        "Pwd": "" //SSL 密码
      },
      "IsAccredit": true, //是否进行登陆验证
      "RequestEncoding": "utf-8" //请求编码方式
    }
  },
  "local": { //本地配置
    "config": { //配置系统的配置
      "AutoLoad": false, //检查变更加载
      "CheckTime": 10, //检查间隔
      "Prower": 10, //覆盖的权限值
      "AutoSave": false, //自动保存
      "SaveTime": 60 //自动保存间隔
    },
    "log": { //日志系统配置
      "SaveDir": "Log", //日志存放路径
      "IsConsole": false, //是否在控制台输出
      "LogGrade": 3, //记录的日志等级
      "IsWriteFile": true //是否写入文件
    },
    "error": {//错误管理器
      "Lang": [ "zh" ],//加载的语义项
      "IsAutoSave": true,//是否自动保存
      "IntervalTime": 60,//保存间隔
      "DefErrorText": {//默认错误文本配置
        "zh": "系统繁忙，清稍后再试!"
      }
    }
  },
  "http": { //Http服务·配置
    "log": {
      "IsEnableLog": false, //是否启用日志
      "IsLocalLog": false, //日志是否本地保存
      "LogGrade": 2, //日志级别
      "LogGroup": "http", //日志组
      "RecordHead": [ "UserAgent", "UserHostAddress", "UrlReferrer", "HttpMethod", "ContentType" ], //记录的请求头 （["*"] 全部）
      "RecordCookie": [], //需记录的Cookie （["*"] 全部）
      "ResponseHead": [] // 需记录的响应头 （["*"] 全部）
    },
    "certHashVal": "", //SSL证书的hash值
    "responseEncoding": "utf-8",
    "gzip": { //压缩配置
      "IsEnable": true, //是否启用
      "Extensions": [ ".txt", ".html", ".css", ".js", ".htm", ".xml", ".json", ".docx", ".doc", ".xlsx", ".xls" ], //压缩文件的扩展名
      "MinFileSzie": 10240, //需要压缩的最小文件大小
      "IsCacheFile": true, //是否缓存为文件
      "CacheDir": "ZipCache", //缓存文件存放位置
      "IsZipApiText": true, //是否压缩API接口返回的文本
      "TextLength": 1000 //API接口返回的文本限定长度
    },
    "file": { //文件配置
      "IsEnable": false, //是否启用文件服务
      "TempDirPath": "TempFile", //临时文件目录路径
      "ContentType": { //响应头 content-type 配置
        ".json": "application/json"
      },
      "DirConfig": [ //文件目录配置
        {
          "DirPath": "", //文件目录的根路径 默认：AppDomain.CurrentDomain.BaseDirectory
          "VirtualPath": "/", //访问的虚拟路径
          "Extension": [ //允许访问的文件扩展名
            "jpg",
            "gif",
            "png",
            "bmp",
            "ico",
            "json",
            "js",
            "css",
            "txt",
            "html",
            "mp4",
            "mp3",
            "woff",
            "woff2",
            "eot"
          ],
          "IsEnableCache": true, //是否启用客户端缓存（ Cache-Control Last-Modified）
          "CacheTime": 600 //缓存时间（秒）
        }
      ],
      "up": { //上传配置
        "MemoryUpSize": 10485760 //文件上传时 使用内存做临时存储 的文件最大大小 默认10MB 超过会生成临时文件
      }
    }
  },
  "SqlSugar": { //SqlSugar配置
    "IsLocalLog": false, //是否启用本地日志
    "Log": {
      "Log": {
        "LogGroup": "SqlSugar", //日志组
        "LogGrade": 1 //日志等级
      },
      "Error": {
        "LogGroup": "SqlSugar", //日志组
        "LogGrade": 4 //日志等级
      }
    }
  },
  "db": { //DB连接配置
    "SqlSugar": [ //SqlSugar组件连接配置 和 SqlSugar 一致
      {
        "ConfigId": "", //多租户ID
        "QueryLock": "WITH(NOLOCK) ", //默认查询锁级别
        "InitKeyType": 0,
        "DbType": 1,
        "ConnectionString": "",
        "IsAutoCloseConnection": true,
        "LanguageType": 1,
        "IndexSuffix": "",
        "SlaveConnectionConfigs": [
          {
            "HitRate": 10,
            "ConnectionString": ""
          }
        ],
        "MoreSettings": {
          "PgSqlIsAutoToLower": true,
          "IsAutoRemoveDataCache": false,
          "IsWithNoLockQuery": true,
          "DisableNvarchar": false,
          "DisableMillisecond": false,
          "DefaultCacheDurationInSeconds": 0,
          "TableEnumIsString": false,
          "DbMinDate": "1900-01-01"
        }
      }
    ]
  }
}